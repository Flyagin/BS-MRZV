#ifndef __DIAGNOSTYKA_BR_H
#define __DIAGNOSTYKA_BR_H

enum _error_br_id {
ERROR_BR_TEST1_BIT = 0,


};
enum BrFatalEror {

ERROR_BR_VREF_ADC1_TEST_BIT                      = ERROR_BR_TEST1_BIT, 
ERROR_BR_PIO_SEQ1_TEST_BIT                ,
ERROR_BR_PIO_SEQ2_TEST_BIT                ,
ERROR_BR_PIO_SEQ3_TEST_BIT                ,
ERROR_BR_M2M_SEQ_TEST_BIT                 ,
ERROR_BR_M2M_SELF_TEST_BIT                ,
ERROR_BR_SETTINGS_BIT                     ,     
ERROR_BR_SETTINGS_EMPTY_BIT               ,     
ERROR_BR_SETTINGS_COMPARISON_BIT          ,
ERROR_BR_SETTINGS_CONTROL_BIT             ,
ERROR_BR_CFG_TBL_EEPROM_BIT               ,
ERROR_BR_CFG_TBL_EEPROM_EMPTY_BIT         ,
ERROR_BR_CFG_TBL_EEPROM_COMPARISON_BIT    ,
ERROR_BR_CFG_TBL_EEPROM_CONTROL_BIT       ,

ERROR_BR_DEF_TRG_BIT           ,
ERROR_BR_DEF_TRG_EMPTY_BIT     ,
ERROR_BR_DEF_TRG_CONTROL_BIT   ,
ERROR_BR_TRG_OUT_BIT           ,
ERROR_BR_TRG_OUT_EMPTY_BIT     ,
ERROR_BR_TRG_OUT_CONTROL_BIT   ,
ERROR_BR_TRG_LED_BIT           ,
ERROR_BR_TRG_LED_EMPTY_BIT     ,
ERROR_BR_TRG_LED_CONTROL_BIT   ,

ERROR_BR_SPI_EEPROM_BIT     ,      
ERROR_BR_SPI_ICI_BIT        ,   
ERROR_BR_ASSEMBLY_CHECK_BIT ,//BLOCK IS CJNNECTED OR NOT
ERROR_BR_5V_CHECK_BIT       ,

ERROR_BR_DI_00_CHECK_BIT  ,
ERROR_BR_DI_01_CHECK_BIT  ,
ERROR_BR_DI_02_CHECK_BIT  ,
ERROR_BR_DI_03_CHECK_BIT  ,
ERROR_BR_DI_04_CHECK_BIT  ,
ERROR_BR_DI_05_CHECK_BIT  ,
ERROR_BR_DI_06_CHECK_BIT  ,
ERROR_BR_DI_07_CHECK_BIT  ,
ERROR_BR_DI_08_CHECK_BIT  ,
ERROR_BR_DI_09_CHECK_BIT  ,
ERROR_BR_DI_11_CHECK_BIT  ,
ERROR_BR_DI_12_CHECK_BIT  ,
ERROR_BR_DI_13_CHECK_BIT  ,
ERROR_BR_DI_14_CHECK_BIT  ,
ERROR_BR_DI_15_CHECK_BIT  ,
ERROR_BR_DI_16_CHECK_BIT  ,
ERROR_BR_DI_17_CHECK_BIT  ,
ERROR_BR_DI_18_CHECK_BIT  ,
ERROR_BR_DI_19_CHECK_BIT  ,
ERROR_BR_DI_20_CHECK_BIT  ,
ERROR_BR_DI_21_CHECK_BIT  ,
ERROR_BR_DI_22_CHECK_BIT  ,
ERROR_BR_DI_23_CHECK_BIT  ,
ERROR_BR_DI_24_CHECK_BIT  ,
ERROR_BR_DI_25_CHECK_BIT  ,
ERROR_BR_DI_26_CHECK_BIT  ,
ERROR_BR_DI_27_CHECK_BIT  ,
ERROR_BR_DI_28_CHECK_BIT  ,
ERROR_BR_DI_29_CHECK_BIT  ,
ERROR_BR_DI_30_CHECK_BIT  ,
ERROR_BR_DI_31_CHECK_BIT  ,
ERROR_BR_DI_32_CHECK_BIT  ,

ERROR_BR_DO_00_CHECK_BIT  ,
ERROR_BR_DO_01_CHECK_BIT  ,
ERROR_BR_DO_02_CHECK_BIT  ,
ERROR_BR_DO_03_CHECK_BIT  ,
ERROR_BR_DO_04_CHECK_BIT  ,
ERROR_BR_DO_05_CHECK_BIT  ,
ERROR_BR_DO_06_CHECK_BIT  ,
ERROR_BR_DO_07_CHECK_BIT  ,
ERROR_BR_DO_08_CHECK_BIT  ,
ERROR_BR_DO_09_CHECK_BIT  ,
ERROR_BR_DO_11_CHECK_BIT  ,
ERROR_BR_DO_12_CHECK_BIT  ,
ERROR_BR_DO_13_CHECK_BIT  ,
ERROR_BR_DO_14_CHECK_BIT  ,
ERROR_BR_DO_15_CHECK_BIT  ,
ERROR_BR_DO_16_CHECK_BIT,

ERROR_BR_FATAL_EROR_LAST_BIT








};

//,#define SIZE_BR_RAM_PRG_EVT_UNN (  (( (ERROR_BR_FATAL_EROR_LAST_BIT )>>2)<<2) + (4*(1&&( (ERROR_BR_FATAL_EROR_LAST_BIT ))&3))    )
#define SIZE_BR_RAM_PRG_EVT_UNN (  (( (ERROR_BR_FATAL_EROR_LAST_BIT )>>3) ) + (4*(1&&( (ERROR_BR_FATAL_EROR_LAST_BIT ))&3))    )

//#endif 

typedef struct tag_BrRamPrgEvtDsc
{
	union 
	{
		char   chArBrPrgEvts  [  SIZE_BR_RAM_PRG_EVT_UNN];
		short  shArBrPrgEvts  [ (SIZE_BR_RAM_PRG_EVT_UNN>>1)];
	    long    lArBrPrgEvts  [ (SIZE_BR_RAM_PRG_EVT_UNN>>2)];
		
	}UNBrRamPrgEvts;
	//long Additio Var if Need;
}BrRamPrgEvtDsc;





#endif
