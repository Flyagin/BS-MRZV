//#include "B16LDfl.c"
#include "memory_map_type_definition.h"
#include "libraries_mal.h"
#include "constants_mal.h"
#include "hv_df.h"
#include "type_definition_mal.h"
#include "variables_global_mal.h"
#include "gui_variables.h"
#include "functions_global_mal.h"
#include "gui_functions.h"

//long SendStngTbl(void);
void ActivateTransmittionStngOnBM(void);


#include <pio/pio.h>

#include <usart/usart.h>
#include "./Gui/KbdDrv.h"
#include "./ici_api.h"
#include "modbus_variables.h"
#include "modbus_functions.h"

//FOR DRIVER RS485
#include "LibRS485.h"
#include "constant.h"
#include "variables_global.h"
#include "driverRS485_global.h"

//twi
#include "header.h"

extern void tmr_init(void);
extern void modbus_variables_init(void);
extern void usb_init(void);
extern void usb_routines(void);
extern void modbus_routines(void);
extern long SetUpArm926ej(void);
extern void u2_hdw_init(void);
extern void ON_BackLight(void );
extern void OFF_BackLight(void );
int main()
{
  AT91C_BASE_PIOD->PIO_PER  = 0xFFFF | (1 << 20) | (1 << 21) | (1 << 22)| (1<<23);
  AT91C_BASE_PIOD->PIO_OER  = 0xFFFF | (1 << 20) | (1 << 21) | (1 << 22)| (1<<23);
  AT91C_BASE_PIOD->PIO_CODR = 0xFFFF | (1 << 20) | (1 << 21) | (1 << 22);
  AT91C_BASE_PIOD->PIO_SODR = (1<<23);
  AT91C_BASE_PIOD->PIO_SODR = (0xFF);
  AT91C_BASE_PIOD->PIO_CODR = (1<<23);
  SetUpArm926ej();
  u2_hdw_init();
  //Test_Loop();
  // tmr_init();
  modbus_variables_init();
  // usb_init();

//  /*********************************/
//  // debug rtc
//  SPIOperationTable |= RTC_WRITE_DATE;
//  pDateInDevice.year = 0x15;
//  pDateInDevice.dayOfMonth = 0x28;
//  pDateInDevice.month = 0x1;
//  pDateInDevice.hour = 0x10;
//  pDateInDevice.minutes = 0x35;
//  pDateInDevice.seconds = 0x00;
//  /*******************************/
  
  SPI1_Init();
  //AT91C_BASE_PIOC->PIO_PDR  = 0xFFFF0000;
  SPIOperationTable |= EEPROM_READ_SETTINGS;//EEPROM_WRITE_SETTINGS;
  
  StartUPInitKBD();
  StartUPInitLCD();
  
  gui_init();
  
  start_tasks_mal();
  
#ifdef  flash  
  while(1);
#endif    
  Setings_RS485(); 
  settings_for_ZigBee();

  // EEPROM reading
  int temp = (EEPROM_READ_ADJUSTMENT | EEPROM_READ_SETTINGS |
              EEPROM_READ_SECURITY | EEPROM_READ_DIGITAL |
              EEPROM_READ_ANALOG | EEPROM_READ_FAILURE );
  while(SPIOperationTable & temp) {
    SPI1_Routine();
  }
  
  while(1)
  {
    periodical_tasks_mal();
    gui_routines();
    
    if (start_gui_exec || start_time_gui_exec) {
      GUI_MULTIBUF_Begin();
      start_gui_exec = 0;
      if (start_time_gui_exec) {
        start_time_gui_exec = 0;
      } else {
        uiCtrHideScr = 0x2000000;
      }
      start_time_gui_exec = 0;
      gui_update = 0;
      GUI_Exec();
      GUI_MULTIBUF_End();
    }
    else
    {
      //Decrease Timer
      if (uiCtrHideScr)
      {
        uiCtrHideScr--;
        //ArTenPerStateDsc locArTenPerState;
        //int res;
        //res =  ReqArTenPerData(0,&locArTenPerState);  
        //if ( (res == SUCCESS_EXEC) || (res == ERROR_EXEC) )
        //	res =  ReqArTenPerData(1,&locArTenPerState); 
        
        /*MTO*/
        if (uiCtrHideScr == 0) OFF_BackLight();
        /***/
      }
      else
      {
        /*MTO*/
        /***/
        if (hldScanCode.UNFKeyField.arUl[0] || hldScanCode.UNFKeyField.arUl[1])
        {
          uiCtrHideScr = 0x2000000;
          ON_BackLight();
        }
      }
//      else
//      {
//        OFF_BackLight();//Hide LCD
//       // ActivateTransmittionStngOnBM();//SendStngTbl();
////        uiCtrHideScr = 40000;
//      }
    }
//    if (uiCtrHideScr == 0)
//      if (hldScanCode.UNFKeyField.arUl[0] || hldScanCode.UNFKeyField.arUl[1])
//      {
//        uiCtrHideScr = 0x2000000;
//        ON_BackLight();
//      }
    
//    printf("main.c Line 67 - in While \n");
    
    driverRS485_main();
    
    usb_routines();
    //сканування каналу зв'¤зку з модемом ZigBee
    
    ZigBee_scaner();
    
    modbus_routines();
    //  Scan_Ici_Event_Req(); //
    //  Scan_Ici_Entry_Data();//
    
    SPI1_Routine();
  }
 //return 0;
}
